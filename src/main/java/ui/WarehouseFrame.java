/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import entities.Pet;
import entities.User;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import mainwork.Cassandra;
import mainwork.Connection;

/**
 *
 * @author nastja
 */
public class WarehouseFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form WarehouseFrame
     */
    Cassandra c = Connection.getInstance();
    User user;
    DefaultTableModel modelWareHouse;
    Map<String, Integer> dataTableWareHouse;
    
    DefaultTableModel modelStatistic;
    Map<String, Set<String>> dataTableStatistic;
    public WarehouseFrame(User user) {
        this.user = user;
      
        initComponents();
        this.balanceLabel.setText("Your balance are " + c.getUserBalance(user.userId));
        modelWareHouse= (DefaultTableModel)this.wareHouseTable.getModel();
        fillTableWareHouse();
        
        modelStatistic = (DefaultTableModel)this.statisticTable.getModel();
        statisticTable.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        fillStatistic();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        wareHouseTable = new javax.swing.JTable();
        buyMeal = new javax.swing.JButton();
        balanceLabel = new javax.swing.JLabel();
        balanceField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        statisticTable = new javax.swing.JTable();

        wareHouseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Name", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(wareHouseTable);

        buyMeal.setText("Buy");
        buyMeal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buyMealMouseClicked(evt);
            }
        });

        jButton1.setText("Add money");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);

        statisticTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Meal", "Pets"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        statisticTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(statisticTable);
        if (statisticTable.getColumnModel().getColumnCount() > 0) {
            statisticTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buyMeal, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(balanceField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(balanceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(balanceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(buyMeal)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buyMealMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buyMealMouseClicked
        BuyMealFrame buyMealFrame = new BuyMealFrame(user, this);
        buyMealFrame.setVisible(true);
    }//GEN-LAST:event_buyMealMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        c.setUserBalance(user.userId, c.getUserBalance(user.userId) 
                +  Float.parseFloat(balanceField.getText()));
        rephreshBalance();
    }//GEN-LAST:event_jButton1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField balanceField;
    private javax.swing.JLabel balanceLabel;
    private javax.swing.JButton buyMeal;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable statisticTable;
    private javax.swing.JTable wareHouseTable;
    // End of variables declaration//GEN-END:variables

    public void fillTableWareHouse() {
           clearTable();
           this.dataTableWareHouse = this.c.getWareHouse(user);
   
           dataTableWareHouse.entrySet().stream().forEach((_item) -> 
               modelWareHouse.addRow(new Object[]{c.getMeal(_item.getKey()), _item.getValue()})
        );
       
      
    }

    private void clearTable() {
          int n = wareHouseTable.getRowCount();
        for (int i = 0; i < n; i++) {
           
          modelWareHouse.removeRow(0);       
        }
    }
    
    public void rephreshBalance(){
       this.balanceLabel.setText("Your balance are " + c.getUserBalance(user.userId));
    }

    private void fillStatistic() {
        clearTableStatistic();
       this.dataTableStatistic = c.getStatisticMeals();
   
           dataTableStatistic.entrySet().stream().forEach((_item) -> 
               modelStatistic.addRow(new Object[]{_item.getKey(), _item.getValue().toString()})
           );

    }

    private void clearTableStatistic() {
                int n = statisticTable.getRowCount();
        for (int i = 0; i < n; i++) {
          
          modelStatistic.removeRow(0);       
        
        }
    }
}
